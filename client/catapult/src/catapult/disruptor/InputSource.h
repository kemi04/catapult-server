#pragma once
#include <iosfwd>
#include <stdint.h>

namespace catapult { namespace disruptor {

#define INPUT_SOURCE_LIST \
	/* The input source is unknown. */ \
	ENUM_VALUE(Unknown, 0u) \
	\
	/* The input was generated by a local node (e.g. harvested). */ \
	ENUM_VALUE(Local, 1u) \
	\
	/* The input was pulled from a remote node. */ \
	ENUM_VALUE(Remote_Pull, 2u) \
	\
	/* The input was pushed by a remote node. */ \
	ENUM_VALUE(Remote_Push, 4u)

#define ENUM_VALUE(LABEL, VALUE) LABEL = VALUE,
	/// Possible consumer input sources.
	enum class InputSource : uint32_t {
		INPUT_SOURCE_LIST
	};
#undef ENUM_VALUE

	/// Insertion operator for outputting \a value to \a out.
	std::ostream& operator<<(std::ostream& out, InputSource value);
}}
